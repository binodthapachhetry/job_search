job_search:
  description: |
    You have a search tool that returns a list of web search results based on the query: {query}.
    Your goal is to identify *actual job postings* from these results and extract key information.
    1. Examine ALL the search results provided by the tool.
    2. Filter the results: Select only those links that appear to be specific job postings on company career pages or reputable job boards (like LinkedIn jobs, Indeed postings, Glassdoor jobs, etc.). Discard links to general search result pages, articles, PDFs, forums, or unrelated websites.
    3. For each identified job posting link, try to extract these details from the search result snippet or title - "Job Title, Company Name, Location, and the direct URL to the job posting". Use the snippet for a brief Description. If a detail isn't available in the search result, omit it or mark it as 'Not Available'.
    4. Compile a list of these extracted job postings. Aim to find as many relevant job postings as possible from the provided search results.
  expected_output: A structured output as a valid json with the list of jobs found with all their information. Make sure that field names are kept the same.

job_rating:
  description: |
    1. Use your 'Read a file's content' tool to read the content of the resume file provided.
    2. Analyze the list of jobs provided in the context.
    3. For each job, compare its details (like title, description) with the information from the resume you read.
    4. Based on this comparison, provide a rating for each job on a scale of 1-10, where 10 is the best fit for the resume. Store this in a 'rating' field.
    5. Add a 'rating_description' field for each job, explaining the reasoning behind the rating in 1-2 sentences.
    6. Ensure all original job information received in the context is preserved alongside the new rating fields.
  expected_output:  A structured output as a valid json list of jobs, each including the original job details plus the 'rating' and 'rating_description' fields. Make sure that field names are kept the same as in the original context where possible.

evaluate_company:
  description: |
    Using your tools find information about the company of jobs.
    Information can include company culture reviews, company financial reports, and stock performance. 
    provide an additional rating for the company in a field called company_rating.
    The rating is between 1-10 where 10 is the best rating. Every job should have a rating.  
    Additionally add a company_rating_description field that explains the reasoning behind the number of rating in 1 or 2 sentences.
    Make sure that all information about the jobs is also maintained in the output.
  expected_output:  A structured output as a valid json of the list of jobs found and their respective ratings, make sure to structure all information according this model {output_schema}

structure_results:
  description: |
    Use all the context to structure the output as needed for the final reporting.
  expected_output: A structured output as a valid json of the list of jobs found and their respective ratings. Make sure that the final output you provide is a valid json with schema {output_schema}
